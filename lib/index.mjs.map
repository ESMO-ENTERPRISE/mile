{"version":3,"file":"index.mjs","sources":["../src/constants.ts","../src/logger.ts","../src/process.ts","../src/handlers.ts","../src/cli.ts"],"sourcesContent":["export const MESSAGES = {\n    APPLICATION_NAME_QUESTION: `What is the name of your application?`,\n    PACKAGE_MANAGER_QUESTION: `Which package manager would you ðŸ’™ to use?`,\n    PACKAGE_MANAGER_ERROR: 'Package manager selected is not installed',\n    PACKAGE_MANAGER_NPM: 'npm',\n    PACKAGE_MANAGER_YARN: 'yarn',\n    PACKAGE_MANAGER_PNPM: 'pnpm',\n    RUNNER_EXECUTION_ERROR: (command: string) => `\\nFailed to execute command: ${command}`,\n}\n\nexport const TYPESCRIPT_CONFIG_TEMPLATE = `\n{\n    \"include\": [\"src\", \"rollup.config.ts\"],\n    \"compilerOptions\": {\n        \"target\": \"ES6\" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,\n        \"declaration\": true /* Generates corresponding '.d.ts' file. */,\n        \"outDir\": \"dist\" /* Redirect output structure to the directory. */,\n        \n        /* Strict Type-Checking Options */\n        \"strict\": true /* Enable all strict type-checking options. */,\n        \"noImplicitAny\": true /* Raise error on expressions and declarations with an implied 'any' type. */,\n        \"strictNullChecks\": true /* Enable strict null checks. */,\n        \"strictFunctionTypes\": true /* Enable strict checking of function types. */,\n        \"strictBindCallApply\": true /* Enable strict 'bind', 'call', and 'apply' methods on functions. */,\n        \"strictPropertyInitialization\": true /* Enable strict checking of property initialization in classes. */,\n        \"noImplicitThis\": true /* Raise error on 'this' expressions with an implied 'any' type. */,\n        \"alwaysStrict\": true /* Parse in strict mode and emit \"use strict\" for each source file. */,\n\n        /* Additional Checks */\n        \"noUnusedLocals\": true /* Report errors on unused locals. */,\n        \"noUnusedParameters\": true /* Report errors on unused parameters. */,\n        \"noImplicitReturns\": true /* Report error when not all code paths in function return a value. */,\n        \"noFallthroughCasesInSwitch\": true /* Report errors for fallthrough cases in switch statement. */,\n        \"noUncheckedIndexedAccess\": true /* Include 'undefined' in index signature results */,\n\n        /* Module Resolution Options */\n        \"moduleResolution\": \"node\" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,\n        \"resolveJsonModule\": true,\n        \"allowSyntheticDefaultImports\": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,\n        \"esModuleInterop\": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,\n        \n        /* Advanced Options */\n        \"skipLibCheck\": true /* Skip type checking of declaration files. */,\n        \"forceConsistentCasingInFileNames\": true /* Disallow inconsistently-cased references to the same file. */\n    }\n  }\n`","import { Logger } from 'tslog'\n\nexport const logger = new Logger({})\n","import jsonfile from 'jsonfile';\nimport { ChildProcess, SpawnOptions, spawn } from \"child_process\";\nimport { MESSAGES } from \"./constants\";\nimport { logger } from \"./logger\";\n\nexport const run = async (command: string, args: string[], collect = false): Promise<null | string> => {\n    const cwd: string = process.cwd();\n    const options: SpawnOptions = {\n        cwd,\n        stdio: collect ? 'pipe' : 'inherit',\n        shell: true,\n    };\n    return new Promise<null | string>((resolve, reject) => {\n        const child: ChildProcess = spawn(command, [...args], options);\n        if (collect) {\n            child.stdout!.on('data', (data) =>\n                resolve(data.toString().replace(/\\r\\n|\\n/, '')),\n            );\n            child.stderr!.on('data', () => {\n                logger.error(MESSAGES.PACKAGE_MANAGER_ERROR);\n            })\n        }\n        child.on('close', (code) => {\n            if (code === 0) {\n                resolve(null);\n            } else {\n                logger.error(MESSAGES.RUNNER_EXECUTION_ERROR(`${command}`));\n                reject();\n                process.exit(1);\n            }\n        });\n    });\n}\n\nexport const editPackageJson = ({\n    parent,\n    key,\n    value,\n    force\n}: {\n    parent?: string,\n    key: string,\n    value: string,\n    force?: boolean\n}) => {\n    force = force || false;\n\n    try {\n        let packaged = jsonfile.readFileSync('package.json')\n        if(parent) {\n            if (!packaged[parent]) {\n                packaged[parent] = {}\n            }\n            if (!force && packaged[parent][key]) {\n                const message = `Attempted to update ` + parent + '.' + key + ` with \"` + value + `\"`\n                throw new Error(message)\n            }\n    \n            packaged[parent][key] = value.replace(/\\+/g, ' ');\n        } else {\n            packaged[key] = value.replace(/\\+/g, ' ');\n        }\n    jsonfile.writeFileSync('package.json', packaged, {spaces: 4})\n    } catch (e) {\n        process.stdout.write('An exception occurred:\\n')\n        if (e instanceof Error) process.stdout.write('    ' + e.message)\n        process.stdout.write('\\n')\n        process.exit(1)\n    }\n}","import inquirer from 'inquirer'\nimport { existsSync, writeFileSync } from 'fs';\nimport path from 'path';\nimport ora from 'ora';\n\nimport { MESSAGES, TYPESCRIPT_CONFIG_TEMPLATE } from './constants'\nimport { editPackageJson, run } from './process'\nimport { logger } from './logger';\n\n// init typescript project, and install mile\nexport const init = async () => {\n    const { pm } = await inquirer.prompt({\n        name: 'pm',\n        type: 'list',\n        message: MESSAGES.PACKAGE_MANAGER_QUESTION,\n        choices: [MESSAGES.PACKAGE_MANAGER_NPM, MESSAGES.PACKAGE_MANAGER_YARN, MESSAGES.PACKAGE_MANAGER_PNPM]\n    });\n    \n    const { name } = await inquirer.prompt({\n        name: 'name',\n        type: 'input',\n        message: MESSAGES.APPLICATION_NAME_QUESTION,\n        default: path.basename(process.cwd())\n    });\n\n    const sources: Record<string, () => void> = {\n        'npm': async () => {\n            await run(/^win/.test(process.platform) ? 'npm.cmd' : 'npm', ['-v']);\n            await run('npm', ['init', '--y'], true);\n            // await run('npm', ['install', '@vira/milefu', '-D'], true);\n        },\n        'pnpm': async () => {\n            // await run(/^win/.test(process.platform) ? 'pnpm.cmd' : 'pnpm', ['-v']);\n            await run('pnpm', ['init'], true);\n            // await run('pnpm', ['install', '@vira/milefu', '-D'], true);\n            writeFileSync('tsconfig.ts', TYPESCRIPT_CONFIG_TEMPLATE);\n        },\n        'yarn': async () => {\n            await run(/^win/.test(process.platform) ? 'yarn.cmd' : 'yarn', ['-v']);\n            await run('yarn', ['init', '-y'], true);\n            // await run('yarn', ['install', '@vira/milefu', '-D'], true);\n        },\n    };\n\n    \n    const spinner = ora({\n        text: 'Initializing project',\n    }).start();\n    \n    if (existsSync('package.json')) logger.warn('A package.json already exists')\n    const promise = new Promise<void>((resolve) => {\n        resolve(sources[pm as string]())\n    })\n\n    await promise\n    // else await sources[pm as string];\n\n    // editPackageJson({key: 'name', value: name, force: true})\n    // editPackageJson({parent: 'scripts', 'key': 'build', value: 'npx milefu build'})\n\n    spinner.stop();\n}","#! /usr/bin/env node\n\nimport figlet from 'figlet';\nimport { Command, OptionValues } from 'commander';\nimport { init } from './handlers';\n\nconst getHandler = (options: OptionValues) => {\n    const handlers: Record<string, () => void> = {\n        'init': () => init()\n    };\n\n    Object.keys(options).forEach(option => handlers[option as string]());\n}\n\nconst cli = () => {\n    console.log(figlet.textSync('MILE'))\n\n    const program = new Command();\n\n    program\n        .version('0.0.1')\n        .description('The simplest and fastest way to bundle your TypeScript libraries')\n        .option('-i, --init', 'Initialize project with default config')\n        .parse(process.argv);\n\n    getHandler(program.opts<{ init: string }>());\n\n    if (!process.argv.slice(2).length)\n        program.outputHelp();\n}\n\nexport default cli();\n"],"names":["__async"],"mappings":"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"}